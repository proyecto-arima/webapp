name: Deploy to production

on: 
  push:
    tags:
      - '*'

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker image
      run: docker build --build-arg REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL_PROD }} -t ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):$(echo $GITHUB_REF | sed 's/refs\/tags\///') .

    - name: Push Docker image
      run: docker push ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):$(echo $GITHUB_REF | sed 's/refs\/tags\///')

    - name: Create Docker image latest
      run: docker tag ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):$(echo $GITHUB_REF | sed 's/refs\/tags\///') ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):latest

    - name: Push Docker image latest
      run: docker push ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker-image

    steps:
    - name: Install SSH client
      run: sudo apt-get update && sudo apt-get install -y openssh-client

    - name: Deploy to prod
      uses: appleboy/ssh-action@v0.1.4
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        port: 22
        script: |
          cd ${{ secrets.REMOTE_PATH }}
          docker compose pull
          docker compose --profile deploy --profile mongo up -d webapp
