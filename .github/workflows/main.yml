name: CI/CD

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.15.0'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint


  build-docker-image:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: ci

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):$(echo $GITHUB_REF | sed 's/refs\/tags\///')
          ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):latest
        platforms: linux/amd64,linux/arm64/v8

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker-image

    steps:
    - name: Install SSH client
      run: sudo apt-get update && sudo apt-get install -y openssh-client

    - name: Copy SSH key
      uses: appleboy/ssh-action@v0.1.4
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        port: 22
        script: |
          cd ${{ secrets.REMOTE_PATH }}
          docker compose pull
          docker compose up -d --build
