name: CI & Deploy to Test

on:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.15.0'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint


  build-docker-image:
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build --build-arg REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL_TEST }} -t ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):$GITHUB_SHA .

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):$GITHUB_SHA

      - name: Create Docker image latest test
        run: docker tag ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):$GITHUB_SHA ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):latest-test

      - name: Push Docker image latest test
        run: docker push ghcr.io/${{ github.repository_owner }}/$(basename $GITHUB_REPOSITORY):latest-test

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker-image

    steps:
    - name: Install SSH client
      run: sudo apt-get update && sudo apt-get install -y openssh-client

    - name: Deploy to test
      uses: appleboy/ssh-action@v0.1.4
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        port: 22
        script: |
          cd ${{ secrets.REMOTE_PATH }}
          docker compose pull
          docker compose --profile deploy up -d --build webapp
